/* IMPORTANT INSTRUCTIONS FOR LEARNERS
1) DO NOT CHANGE THE ORDER OF COLUMNS.
2) YOUR QUERY SHOULD DISPLAY COLUMNS IN THE SAME ORDER AS MENTIONED IN ALL QUESTIONS.
3) YOU CAN FIND THE ORDER OF COLUMNS IN QUESTION TEMPLATE SECTION OF EACH QUESTION.
4) USE ALIASING AS MENTIONED IN QUESTION TEMPLATE FOR ALL COLUMNS
5) DO NOT CHANGE COLUMN NAMES*/

USE airlines_data;                   
-- Question 1 
-- Objective: Determine, for flights that actually departed later than scheduled, what the departure delay is (in minutes).
-- Calculate the Delay in Departures for Delayed Flights

SELECT flight_id, Flight_no,
TIMESTAMPDIFF (MINUTE, actual_departure, scheduled_departure) AS "departure_delay_minutes"
FROM flights
WHERE actual_departure > scheduled_departure;

-- Question 2 
-- Objective: Show how frequently each aircraft is used by counting the number of flights operated by each aircraft.
-- List Flights Grouped by Aircraft to See Usage Frequency

SELECT aircraft_code, 
COUNT(*) AS total_flights, 
ROUND(AVG(TIMESTAMPDIFF(minute, scheduled_departure, scheduled_arrival))) AS avg_flight_duration_minutes
FROM flights
GROUP BY aircraft_code;

-- Question 3 
-- Objective: Aggregate the total revenue generated by each flight by summing up the fare amounts from the ticket_flights table.
-- Calculate Total Revenue per Flight from the Ticket_Flights Table

SELECT f.flight_id, f.flight_no, SUM(tf.amount) AS total_revenue
FROM flights AS f JOIN ticket_flights AS tf
ON f.flight_id = tf.flight_id
GROUP BY flight_id;

-- Question 4 
-- Objective: Examine boarding pass data to identify how passengers are being boarded by calculating the average boarding number per flight.
-- Analyze Boarding Numbers per Flight to Detect Patterns in Boarding Pass Allocation

SELECT flight_id, AVG(boarding_no) AS avg_boarding_no, COUNT(*) AS total_boarding_passes
FROM boarding_passes
GROUP BY flight_id
ORDER BY flight_id;

-- Question 5 
-- Objective: Identify seat occupancy by comparing the number of boarding passes (occupied seats) to the total seats available on an aircraft.
-- Determine Occupancy per Aircraft

SELECT f.flight_id, f.flight_no, f.aircraft_code,
(SELECT COUNT(*) FROM seats AS s WHERE s.aircraft_code = f.aircraft_code) AS total_seats,
COUNT(bp.ticket_no) AS occupied_seats,
ROUND(COUNT(bp.ticket_no)/(SELECT COUNT(*) FROM seats AS s WHERE s.aircraft_code = f.aircraft_code)*100,2) AS occupancy_rate_percentage
FROM flights AS f LEFT JOIN boarding_passes AS bp ON f.flight_id = bp.flight_id
GROUP BY f.flight_id, f.flight_no, f.aircraft_code; 

-- Question 6 
-- Objective: Identify the three flights that generated the highest revenue based on ticket sales.
-- Top 3 Flights by Revenue

SELECT f.flight_id, f.flight_no, SUM(tf.amount) AS total_revenue 
FROM flights AS f JOIN ticket_flights AS tf
ON f.flight_id = tf.flight_id
GROUP BY flight_id, f.flight_no
ORDER BY total_revenue DESC LIMIT 3;

-- Question 7 
-- Objective: Determine the average flight duration for each aircraft model, allowing you to see how flight performance might vary between different models.
-- Average Flight Duration by Aircraft Model

SELECT a.model, AVG(TIMESTAMPDIFF(minute, f.scheduled_departure, f.scheduled_arrival)) AS avg_duration_minutes
FROM aircrafts AS a JOIN flights AS f
ON a.aircraft_code = f.aircraft_code
GROUP BY a.model;

-- Question 8 
-- Objective: Count how many flights depart from each airport to assess airport activity levels.
-- Flight Count per Airport (Departure)

SELECT a.airport_name, f.departure_airport, COUNT(f.flight_id) AS departure_flights
FROM airports AS a JOIN flights AS f
ON a.airport_code = f.departure_airport
GROUP BY a.airport_code;

-- Question 9 
-- Objective: Count how many flights depart from and arrive at each airport to assess airport activity levels.
-- Flight Count per Airport (Arrival)

SELECT arrival_airport, COUNT(flight_id) AS arrival_flights
FROM flights
GROUP BY arrival_airport;

-- Question 10 
-- Objective: Analyze trends in bookings over time by grouping bookings by date, counting total bookings, and summing up the revenue.
-- Daily Booking Trends

SELECT DATE_FORMAT(book_date, "%d-%m-%y") AS booking_date, COUNT(*) AS total_bookings, SUM(total_amount) AS total_revenue
FROM bookings 
GROUP BY booking_date;

-- Question 11 
-- Objective: Identify the most common routes by counting the number of flights for each departureâ€“arrival airport pair.
-- Frequent Routes Analysis

SELECT departure_airport, arrival_airport, COUNT(flight_id) AS flights_count
FROM flights
GROUP BY departure_airport, arrival_airport;

-- Question 12 
-- Objective: Determine how many passengers boarded each flight by counting the boarding passes issued.
-- Passenger Boarding Summary per Flight

SELECT flight_id, COUNT(boarding_no) AS passengers_boarded
FROM boarding_passes
GROUP BY flight_id;

-- Question 13 
-- Objective: Assess the boarding process by calculating the average boarding order number for each flight, which may indicate the boarding strategy or sequence.
-- Average Boarding Number per Flight

SELECT flight_id, ROUND(AVG(boarding_no), 2) AS avg_boarding_no
FROM boarding_passes
GROUP BY flight_id;

-- Question 14 
-- Objective: Aggregate the total amount spent by each passenger across all their tickets by joining the tickets and ticket_flights tables.
-- Total Spend per Passenger

SELECT t.passenger_id, COUNT(tf.ticket_no) AS total_tickets, SUM(tf.amount) AS total_spent
FROM tickets AS t JOIN ticket_flights AS tf
ON t.ticket_no = tf.ticket_no
GROUP BY t.passenger_id;

-- Question 15 
-- Objective: Analyze the distribution of ticket volume and revenue across different fare conditions.
-- Fare?Condition Distribution

SELECT fare_conditions, COUNT(ticket_no) AS tickets_sold, SUM(amount) AS total_revenue
FROM ticket_flights
GROUP BY fare_conditions;

-- Question 16 
-- Objective: Aggregate total revenue generated by each departure?arrival airport route.
-- Revenue by Route

SELECT departure_airport, arrival_airport, SUM(amount) AS total_route_revenue
FROM flights AS f JOIN ticket_flights AS tf
ON f.flight_id = tf.flight_id
GROUP BY departure_airport, arrival_airport
ORDER BY total_route_revenue DESC;

-- Question 17 
-- Objective: Identify the top 5 booking hours of the day by volume of bookings
-- Peak Booking Hours

SELECT HOUR(book_date) AS booking_hour, COUNT(*) AS bookings_count
FROM bookings
GROUP BY booking_hour
ORDER BY bookings_count DESC LIMIT 5;

